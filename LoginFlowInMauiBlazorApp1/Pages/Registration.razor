@page "/registration"
@using LoginFlowInMauiBlazorApp1.Models;
@using LoginFlowInMauiBlazorApp1.Services;
@inject IAppService AppService;
@inject NavigationManager NavManager;
   
    <!-- App Header -->
    <div class="appHeader no-border transparent position-absolute">
        <div class="left">
            <NavLink class="nav-link" href="/">
                <a class="headerButton goBack">
                    <ion-icon name="chevron-back-outline"></ion-icon>
                </a>
            </NavLink>
        </div>
        <div class="pageTitle"></div>
    </div>
    <!-- * App Header -->
    <!-- App Capsule -->
    <div id="appCapsule">

        <div class="section mt-2 text-center">
            <h1>Register now</h1>
            <h4>Create an account</h4>
        </div>
        <div class="section mb-5 p-2">
            <EditForm Model="@registrationModel" OnValidSubmit="Submit">
                <DataAnnotationsValidator />

                <div class="card">
                    <div class="card-body">
                        <div class="form-group basic">
                            <div class="input-wrapper">
                                <label class="label" for="email1">Primeiro Nome</label>
                                <input class="form-control" @bind-value="registrationModel.FirstName" placeholder="digite o primeiro nome">
                                <i class="clear-input">
                                    <ion-icon name="close-circle"></ion-icon>
                                </i>
                                <ValidationMessage For="@(()=> registrationModel.FirstName)" />
                            </div>
                        </div>
                        <div class="form-group basic">
                            <div class="input-wrapper">
                                <label class="label" for="email1">Último Nome</label>
                                <input class="form-control" @bind-value="registrationModel.LastName" placeholder="digite o último nome">
                                <i class="clear-input">
                                    <ion-icon name="close-circle"></ion-icon>
                                </i>
                                <ValidationMessage For="@(()=> registrationModel.LastName)" />
                            </div>
                        </div>
                        <div class="mt-2 form-group">
                            <label>Genero</label>
                            <div class="d-flex flex-row">
                                <div class="col-4 d-flex justify-content-between">
                                    <div class="form-check">
                                        <input @onchange="@(()=> registrationModel.Gender="M")" class="form-check-input" type="radio" name="flexRadioDefault"  id="flexRadioDefault1" />
                                        <label class="form-check-label" for="flexRadioDefault1">
                                            Homem
                                        </label>
                                    </div>
                                    <div class="form-check">
                                    <input @onchange="@(()=> registrationModel.Gender="F")" class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault2" />
                                        <label class="form-check-label" for="flexRadioDefault2">
                                            Mulher
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <ValidationMessage For="@(()=> registrationModel.Gender)" />
                        </div>
                        <div class="form-group basic">
                            <div class="input-wrapper">
                                <label class="label" for="email1">E-mail</label>
                                <input type="email" @bind-value="registrationModel.UserName" class="form-control" id="email1" placeholder="Your e-mail">
                                <i class="clear-input">
                                    <ion-icon name="close-circle"></ion-icon>
                                </i>
                                <ValidationMessage For="@(()=> registrationModel.UserName)" />
                            </div>
                        </div>

                        <div class="form-group basic">
                            <div class="input-wrapper">
                                <label class="label" for="password1">Senha</label>
                                <input type="password" @bind-value="registrationModel.Password" class="form-control" id="password1" autocomplete="off"
                                       placeholder="Your password">
                                <i class="clear-input">
                                    <ion-icon name="close-circle"></ion-icon>
                                </i>
                                <ValidationMessage For="@(()=> registrationModel.Password)" />
                            </div>
                        </div>

                        <div class="form-group basic">
                            <div class="input-wrapper">
                                <label class="label" for="password2">Password Again</label>
                                <input type="password" class="form-control" id="password2" autocomplete="off"
                                       placeholder="Type password again">
                                <i class="clear-input">
                                    <ion-icon name="close-circle"></ion-icon>
                                </i>
                            </div>
                        </div>

                        <div class="custom-control custom-checkbox mt-2 mb-1">
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input" id="customCheckb1">
                                <label class="form-check-label" for="customCheckb1">
                                    I agree <a href="#" data-bs-toggle="modal" data-bs-target="#termsModal">
                                        terms and
                                        conditions
                                    </a>
                                </label>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="mt-2 text-end">
                    <NavLink class="nav-link" href="/Login">
                        <span>Já possui conta? entre com seu login</span>
                    </NavLink>
                </div>
                <div class="form-button-group transparent">
                    <button class="btn btn-primary btn-block btn-lg" type="submit">
                        <span class="@_spinnerClass" role="status" aria-hidden="true"></span>
                        Register
                    </button>
                </div>
            </EditForm>
        </div>

    </div>
    <!-- * App Capsule -->
    <!-- Terms Modal -->
    <div class="modal fade modalbox" id="termsModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Terms and Conditions</h5>
                    <a href="#" data-bs-dismiss="modal">Close</a>
                </div>
                <div class="modal-body">
                    <p>
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc fermentum, urna eget finibus
                        fermentum, velit metus maximus erat, nec sodales elit justo vitae sapien. Sed fermentum
                        varius erat, et dictum lorem. Cras pulvinar vestibulum purus sed hendrerit. Praesent et
                        auctor dolor. Ut sed ultrices justo. Fusce tortor erat, scelerisque sit amet diam rhoncus,
                        cursus dictum lorem. Ut vitae arcu egestas, congue nulla at, gravida purus.
                    </p>
                    <p>
                        Donec in justo urna. Fusce pretium quam sed viverra blandit. Vivamus a facilisis lectus.
                        Nunc non aliquet nulla. Aenean arcu metus, dictum tincidunt lacinia quis, efficitur vitae
                        dui. Integer id nisi sit amet leo rutrum placerat in ac tortor. Duis sed fermentum mi, ut
                        vulputate ligula.
                    </p>
                    <p>
                        Vivamus eget sodales elit, cursus scelerisque leo. Suspendisse lorem leo, sollicitudin
                        egestas interdum sit amet, sollicitudin tristique ex. Class aptent taciti sociosqu ad litora
                        torquent per conubia nostra, per inceptos himenaeos. Phasellus id ultricies eros. Praesent
                        vulputate interdum dapibus. Duis varius faucibus metus, eget sagittis purus consectetur in.
                        Praesent fringilla tristique sapien, et maximus tellus dapibus a. Quisque nec magna dapibus
                        sapien iaculis consectetur. Fusce in vehicula arcu. Aliquam erat volutpat. Class aptent
                        taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- * Terms Modal -->



@code {
    RegistrationModel registrationModel = new();
    private string _spinnerClass = "";

    private async void Submit()
    {
        _spinnerClass = "spinner-border spinner-border-sm";
        var response = await AppService.RegistrationUser(registrationModel);

        if (response.IsSuccess)
        {
            await App.Current.MainPage.DisplayAlert("Sucesso", "Usuário criado com sucesso!", "Ok");
        }
        else
        {
            await App.Current.MainPage.DisplayAlert("Oops", response.ErrorMessage, "Ok");
        }
        _spinnerClass = "";
        this.StateHasChanged();
        NavManager.NavigateTo("/Login");

    }

    private void SetGender(string gender)
    {
        registrationModel.Gender = gender;
    }
}
